def rotate(o, a, b):
    return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0])

def graham_scan(A):
    n = len(A)
    P = list(range(n))
    
    for i in range(1, n):
        if A[P[i]][0] < A[P[0]][0]:
            P[i], P[0] = P[0], P[i]
    
    for i in range(2, n):
        j = i
        while j > 1 and (rotate(A[P[0]], A[P[j-1]], A[P[j]]) < 0):
            P[j], P[j-1] = P[j-1], P[j]
            j -= 1
    
    S = [P[0], P[1]]
    
    for i in range(2, n):
        while rotate(A[S[-2]], A[S[-1]], A[P[i]]) < 0:
            del S[-1]
        S.append(P[i])
    
    return [A[i] for i in S]

A = [(0, 0), (1, 1), (2, 2), (3, 3), (3, 0), (1, 2), (2, 0), (0, 3)]
hull = graham_scan(A)
print("Convex Hull:", hull)

